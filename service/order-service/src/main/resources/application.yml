server:
  port: 8084

spring:
  application:
    name: orderservice
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/shopping?serverTimezone=GMT&useUnicode=true&characterEncoding=utf8&useSSL=true
    username: shopping
    password: shopping
  # Redis
  redis:
    database: 0
    host: localhost
    port: 6379
    jedis:
      pool:
        max-active: 200
        max-wait: -1
        max-idle: 8
        min-idle: 0
    timeout: 0
  session:
    store-type: none
#  kafka:
#    bootstrap-servers: kafka1:9092,kafka2:9093,kafka3:9094
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
# MyBatis Mapper Config
mybatis:
  mapper-locations: classpath:mapper/*.xml
eureka:
  client:
    service-url:
      #     register to another server to achieve high availability
      defaultZone: http://eureka1:8761/eureka/,http://eureka2:8762/eureka/
    fetch-registry: true
resilience4j:
  circuitbreaker:
    instances:
      orderService:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        automatic-transition-from-open-to-half-open-enabled: true
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
management:
  health:
    circuitbreakers:
      enabled: true